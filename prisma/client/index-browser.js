
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  userid: 'userid',
  studentid: 'studentid',
  firstname: 'firstname',
  middlename: 'middlename',
  lastname: 'lastname',
  gender: 'gender',
  baptismalname: 'baptismalname',
  phone: 'phone',
  birthdate: 'birthdate',
  useremail: 'useremail',
  nationality: 'nationality',
  isphysicallydisabled: 'isphysicallydisabled',
  zonename: 'zonename',
  mothertongue: 'mothertongue',
  createdAt: 'createdAt',
  region: 'region',
  telegram_username: 'telegram_username'
};

exports.Prisma.AdminScalarFieldEnum = {
  adminid: 'adminid',
  studentid: 'studentid',
  adminusername: 'adminusername',
  adminpassword: 'adminpassword',
  createdAt: 'createdAt'
};

exports.Prisma.UniversityusersScalarFieldEnum = {
  userid: 'userid',
  departmentname: 'departmentname',
  sponsorshiptype: 'sponsorshiptype',
  participation: 'participation',
  cafeteriaaccess: 'cafeteriaaccess',
  mealcard: 'mealcard',
  batch: 'batch',
  confessionfather: 'confessionfather',
  advisors: 'advisors',
  role: 'role',
  coursetaken: 'coursetaken',
  holidayincampus: 'holidayincampus',
  tookcourse: 'tookcourse',
  ispriestordeacon: 'ispriestordeacon'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.gender_type = exports.$Enums.gender_type = {
  Female: 'Female',
  Male: 'Male'
};

exports.disability_type = exports.$Enums.disability_type = {
  None: 'None',
  Physical: 'Physical',
  Visual: 'Visual',
  Hearing: 'Hearing',
  Intellectual: 'Intellectual',
  Psychosocial: 'Psychosocial',
  Other: 'Other'
};

exports.languages_type = exports.$Enums.languages_type = {
  Amharic: 'Amharic',
  Oromifa: 'Oromifa',
  Tigrigna: 'Tigrigna',
  Not_Specified: 'Not_Specified',
  English: 'English',
  Other: 'Other'
};

exports.regions_type = exports.$Enums.regions_type = {
  Addis_Ababa: 'Addis_Ababa',
  Dire_Dawa: 'Dire_Dawa',
  Tigray: 'Tigray',
  Afar: 'Afar',
  Amhara: 'Amhara',
  Oromia: 'Oromia',
  Somali: 'Somali',
  Benishangul_Gumuz: 'Benishangul_Gumuz',
  SNNPR: 'SNNPR',
  Sidama: 'Sidama',
  South_West_Ethiopia_Peoples_Region: 'South_West_Ethiopia_Peoples_Region',
  Central_Ethiopia_Region: 'Central_Ethiopia_Region',
  South_Ethiopia_Region: 'South_Ethiopia_Region',
  Harari: 'Harari',
  Not_Specified: 'Not_Specified'
};

exports.sponsorship_type = exports.$Enums.sponsorship_type = {
  Government: 'Government',
  Self_Sponsored: 'Self_Sponsored',
  Scholarship: 'Scholarship'
};

exports.participation_type = exports.$Enums.participation_type = {
  Gbi_Gubaye_Secretariat: 'Gbi_Gubaye_Secretariat',
  Audit_and_Inspection_Section: 'Audit_and_Inspection_Section',
  Education_and_Apostolic_Service_Section: 'Education_and_Apostolic_Service_Section',
  Accounting_and_Assets_Section: 'Accounting_and_Assets_Section',
  Development_and_Income_Collection_Section: 'Development_and_Income_Collection_Section',
  Languages_and_Special_Interests_Section: 'Languages_and_Special_Interests_Section',
  Hymns_and_Arts_Section: 'Hymns_and_Arts_Section',
  Planning_Monitoring_Reports_and_Information_Management_Section: 'Planning_Monitoring_Reports_and_Information_Management_Section',
  Professional_and_Community_Development_Section: 'Professional_and_Community_Development_Section',
  Batch_and_Programs_Coordination_Section: 'Batch_and_Programs_Coordination_Section',
  Member_Care_Advice_and_Capacity_Building_Section: 'Member_Care_Advice_and_Capacity_Building_Section',
  None: 'None'
};

exports.advisor_type = exports.$Enums.advisor_type = {
  Yes: 'Yes',
  No: 'No'
};

exports.role_type = exports.$Enums.role_type = {
  Member: 'Member',
  ClassSecretary: 'ClassSecretary',
  ClassTeamLead: 'ClassTeamLead',
  ClassManager: 'ClassManager',
  SubclassSecretary: 'SubclassSecretary',
  SubclassTeamLead: 'SubclassTeamLead',
  SubclassManager: 'SubclassManager',
  None: 'None'
};

exports.Prisma.ModelName = {
  User: 'User',
  admin: 'admin',
  universityusers: 'universityusers'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
